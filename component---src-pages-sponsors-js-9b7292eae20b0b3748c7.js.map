{"version":3,"sources":["webpack:///./src/components/Card.js","webpack:///./src/pages/sponsors.js"],"names":["CardWrap","styled","div","CardHeader","h1","CardCopy","Card","render","this","props","title","dangerouslySetInnerHTML","__html","content","React","Component","Sponsors","sponsorTypes","data","allMarkdownRemark","nodes","slice","map","node","className","frontmatter","html","id","pageQuery"],"mappings":"yMAMA,IAAMA,EAAWC,IAAOC,IAAV,iEAAGD,CAAH,6DAQRE,EAAaF,IAAOG,GAAV,mEAAGH,CAAH,yCAQVI,EAAWJ,IAAOC,IAAV,iEAAGD,CAAH,MAgBCK,E,gLAZbC,OAAA,WACE,OACE,kBAACP,EAAD,KACE,kBAACG,EAAD,KAAaK,KAAKC,MAAMC,OACxB,kBAACL,EAAD,KACE,yBAAKM,wBAAyB,CAAEC,OAAQJ,KAAKC,MAAMI,c,GAN1CC,IAAMC,W,ICpBnBC,E,gLAWJT,OAAA,WACE,IAAMU,EAAeT,KAAKC,MAAMS,KAAKC,kBAAkBC,MACpDC,MAAM,GACNC,KAAI,SAAAC,GAAI,OACP,yBAAKC,UAAU,SACb,kBAAC,EAAD,CAAMd,MAAOa,EAAKE,YAAYf,MAAOG,QAASU,EAAKG,WAMzD,OACE,kBAAC,IAAD,KACE,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,UACb,6BAASG,GAAG,MAAMH,UAAU,eAC1B,4BAAQA,UAAU,SAChB,4BACGhB,KAAKC,MAAMS,KAAKC,kBAAkBC,MAAM,GAAGK,YAAYf,QAG5D,yBACEC,wBAAyB,CACvBC,OAAQJ,KAAKC,MAAMS,KAAKC,kBAAkBC,MAAM,GAAGM,UAK1DT,K,GAvCYH,IAAMC,WAgDhBa,GAFEZ,YAEO","file":"component---src-pages-sponsors-js-9b7292eae20b0b3748c7.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport styled from \"styled-components\";\n\n// ========================\n// The primary card container\nconst CardWrap = styled.div`\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  transition: 0.3s;\n`;\n// ========================\n\n// ========================\n// The card header\nconst CardHeader = styled.h1`\n  font-weight: bold;\n  text-align: center;\n`;\n// ========================\n\n// ========================\n// Primary copy (inc. links, etc)\nconst CardCopy = styled.div``;\n// ========================\n\nclass Card extends React.Component {\n  render() {\n    return (\n      <CardWrap>\n        <CardHeader>{this.props.title}</CardHeader>\n        <CardCopy>\n          <div dangerouslySetInnerHTML={{ __html: this.props.content }} />\n        </CardCopy>\n      </CardWrap>\n    );\n  }\n}\n\nexport default Card;\n\n/*export const query = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allImageSharp {\n            edges {\n                node {\n                    fixed(width: 60) {\n                        ...GatsbyImageSharpFixed\n                    }\n                }\n            }\n        }\n    }\n`*/\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport Card from \"../components/Card\";\n\nclass Sponsors extends React.Component {\n  /*createSponsorTypes = () => {\n        const sponsorTypes = []\n\n        this.props.data.allMarkdownRemark.nodes.slice(1).forEach(({node}) => {\n            sponsorTypes.push(<div className=\"col-4\"><Card name=node.frontmatter.title content={node}/></div>)\n        })\n\n        return sponsorTypes\n    }*/\n\n  render() {\n    const sponsorTypes = this.props.data.allMarkdownRemark.nodes\n      .slice(1)\n      .map(node => (\n        <div className=\"col-4\">\n          <Card title={node.frontmatter.title} content={node.html} />\n        </div>\n      ));\n    /* this.props.data.allMarkdownRemark.nodes.slice(1).map((node) => {\n            sponsorTypes.push(<div className=\"col-4\"><Card name={node.frontmatter.title} content={node}/></div>)\n        })*/\n    return (\n      <Layout>\n        <div className=\"grid-wrapper\">\n          <div className=\"col-12\">\n            <section id=\"one\" className=\"main style1\">\n              <header className=\"major\">\n                <h2>\n                  {this.props.data.allMarkdownRemark.nodes[0].frontmatter.title}\n                </h2>\n              </header>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: this.props.data.allMarkdownRemark.nodes[0].html\n                }}\n              />\n            </section>\n          </div>\n          {sponsorTypes}\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Sponsors;\n\nexport const pageQuery = graphql`\n  query SponsorsQuery {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/sponsors/\" } }\n      sort: { fields: frontmatter___rank, order: ASC }\n    ) {\n      nodes {\n        frontmatter {\n          title\n          rank\n        }\n        html\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}